@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin clearfix() {
  &::before,
  &::after {
    content: ' ';
    display: table;
  }

  &::after {
    clear: both;
  }
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin justify-content($values) {
  -webkit-box-pack: $values;
  -moz-box-pack: $values;
  -ms-flex-pack: $values;
  -webkit-justify-content: $values;
  justify-content: $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

@mixin flex-center() {
  align-items: center;
  justify-content: center;
}

@mixin justify-content($val) {
  justify-content: $val;
  -ms-flex-pack: $val;
  -webkit-justify-content: $val;
}

@mixin align-items($val) {
  align-items: $val;
  -webkit-align-items: $val;
}

@mixin flex-wrap($val) {
  flex-wrap: $val;
  -ms-flex-wrap: $val;
  -webkit-flex-wrap: $val;
}

@mixin responsive-visibility($parent) {
  #{$parent} {
    display: block !important;
  }

  table#{$parent} {
    display: table !important;
  }

  tr#{$parent} {
    display: table-row !important;
  }

  th#{$parent},
  td#{$parent} {
    display: table-cell !important;
  }
}

@mixin responsive-invisibility($parent) {
  #{$parent} {
    display: none !important;
  }
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin center-svg($svg-w, $svg-h) {
  @include size($svg-w, $svg-h);
  left: calc(50% - (#{$svg-w} / 2));
  position: absolute;
  top: calc(50% - (#{$svg-h} / 2));
}
